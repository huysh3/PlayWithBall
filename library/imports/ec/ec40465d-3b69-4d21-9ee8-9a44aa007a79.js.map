{"version":3,"sources":["../../../../assets/scripts/assets/scripts/Star.js"],"names":["cc","Class","extends","Component","properties","pickRadius","game","default","serializable","getPlayerDistance","playerPos","player","getPosition","dist","pDistance","node","position","onPicked","destroy","spawnNewStar","gainScore","start","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,GAAGC,KAAH,CAAS;AACLC,WAASF,GAAGG,SADP;;AAGLC,cAAY;AACV;AACAC,gBAAY,CAFF;;AAIV;AACAC,UAAM;AACJC,eAAS,IADL;AAEJC,oBAAc;AAFV;;AAMJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBQ,GAHP;;AA+BL;;AAEA;;AAEAC,mBAnCK,+BAmCgB;AACnB,QAAIC,YAAY,KAAKJ,IAAL,CAAUK,MAAV,CAAiBC,WAAjB,EAAhB;;AAEA,QAAIC,OAAOb,GAAGc,SAAH,CAAa,KAAKC,IAAL,CAAUC,QAAvB,EAAiCN,SAAjC,CAAX;;AAEA,WAAOG,IAAP;AACD,GAzCI;AA2CLI,UA3CK,sBA2CO;AACV;AACA,SAAKF,IAAL,CAAUG,OAAV;AACA,SAAKZ,IAAL,CAAUa,YAAV;AACA,SAAKb,IAAL,CAAUc,SAAV;AACD,GAhDI;AAoDLC,OApDK,mBAoDI,CAER,CAtDI;AAwDLC,QAxDK,kBAwDGC,EAxDH,EAwDO;AACV,QAAIC,eAAe,IAAI,KAAKlB,IAAL,CAAUmB,KAAV,GAAkB,KAAKnB,IAAL,CAAUoB,YAAnD;AACA,QAAIC,aAAa,EAAjB;AACA,SAAKZ,IAAL,CAAUa,OAAV,GAAoBD,aAAaE,KAAKC,KAAL,CAAWN,gBAAgB,MAAMG,UAAtB,CAAX,CAAjC;;AAEA,QAAI,KAAKlB,iBAAL,KAA2B,KAAKJ,UAApC,EAAgD;AAC9C;AACA,WAAKY,QAAL;AACA,aAAO,IAAP;AACD;AACF;AAlEI,CAAT","file":"Star.js","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n      // 距离小于此数值即收集\n      pickRadius: 0,\n\n      // 暂存game\n      game: {\n        default: null,\n        serializable: false,\n      },\n\n\n        // foo: {\n        //     // ATTRIBUTES:\n        //     default: null,        // The default value will be used only when the component attaching\n        //                           // to a node for the first time\n        //     type: cc.SpriteFrame, // optional, default is typeof default\n        //     serializable: true,   // optional, default is true\n        // },\n        // bar: {\n        //     get () {\n        //         return this._bar;\n        //     },\n        //     set (value) {\n        //         this._bar = value;\n        //     }\n        // },\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    getPlayerDistance () {\n      let playerPos = this.game.player.getPosition()\n\n      let dist = cc.pDistance(this.node.position, playerPos)\n\n      return dist\n    },\n\n    onPicked () {\n      // 销毁星星，得分，生成新星星\n      this.node.destroy()\n      this.game.spawnNewStar()\n      this.game.gainScore()\n    },\n\n\n\n    start () {\n\n    },\n\n    update (dt) {\n      let opacityRatio = 1 - this.game.timer / this.game.starDuration\n      let minOpacity = 50\n      this.node.opacity = minOpacity + Math.floor(opacityRatio * (255 - minOpacity))\n\n      if (this.getPlayerDistance() < this.pickRadius) {\n        // 调用收集\n        this.onPicked()\n        return true\n      }\n    },\n});\n"]}